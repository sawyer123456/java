package Thread;

import java.util.ArrayList;
import java.util.List;

public class Cinema2 {
	public static void main(String[] args) {
		CinemaR c = new CinemaR(2, "sxt");
		new Thread(new Coustomer(c, 2), "小明").start();
		new Thread(new Coustomer(c, 1), "小花").start();
	}
}

class Coustomern implements Runnable {
	Cinema3 cinema;
	List<Integer> seats;

	public Coustomern(Cinema3 cinema, List<Integer> seats) {

		this.cinema = cinema;
		this.seats = seats;
	}

	@Override
	public void run() {
		synchronized (cinema) {

			boolean flag = cinema.Booktickets3(seats);
			if (flag) {
				System.out.println("出票成功" + Thread.currentThread().getName());
			} else {
				System.out.println("出票失败" + Thread.currentThread().getName());
			}

		}
	}

}

class Cinema3 {
	List<Integer> available;
	String name;

	public Cinema3(List<Integer> available, String name) {

		this.available = available;
		this.name = name;
	}

	//购票
	public boolean Booktickets3(List<Integer> seats) {
		System.out.println("可用位置为：" + available);
		 List<Integer> copy =new ArrayList<Integer>();		 
		 
		 copy.addAll(available);		 
		 //相减，求交集
		 copy.removeAll(seats);
		 判断大小
		 if(available.size()-copy.size()!=seats.size()) {
			 return false;
		 }
		 
		 available =copy;
		 return true;
		 
	}
}
